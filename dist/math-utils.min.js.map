{"version":3,"file":"math-utils.min.js","mappings":"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","sources":["webpack://math/./src/axisAngle.ts","webpack://math/./src/complex.ts","webpack://math/./src/index.ts","webpack://math/./src/mat2.ts","webpack://math/./src/mat3.ts","webpack://math/./src/mat4.ts","webpack://math/./src/matrix.ts","webpack://math/./src/quat.ts","webpack://math/./src/transform.ts","webpack://math/./src/utils.ts","webpack://math/./src/vec2.ts","webpack://math/./src/vec3.ts","webpack://math/./src/vec4.ts","webpack://math/./src/vector.ts","webpack://math/webpack/bootstrap","webpack://math/webpack/startup"],"sourcesContent":["import { Epsilon, near } from \"./utils\";\r\nimport vec3 from \"./vec3\";\r\n\r\nexport default class axisAngle{\r\n    axis:vec3;\r\n    angle:number;\r\n    constructor(axis:vec3, angle:number){\r\n        this.axis = axis.normalized();\r\n        this.angle = angle;\r\n    }\r\n    static near(a:axisAngle, b:axisAngle, threshold?:number):boolean{\r\n        if(!threshold)\r\n            threshold = Epsilon;\r\n        return vec3.near(a.axis, b.axis, threshold) && near(a.angle, b.angle, threshold);\r\n    }\r\n    rotate(point:vec3):vec3{\r\n        return vec3.add(vec3.lerp(this.axis.scale(vec3.dot(this.axis, point)), point, Math.cos(this.angle)),\r\n         vec3.cross(this.axis, point).scaleSelf(Math.sin(this.angle)));\r\n    }\r\n    toString():string{\r\n        return `{ axis:${this.axis.toString()}, angle:${this.angle.toFixed(4)} }`;\r\n    }\r\n    // todo: euler angles to axis angle\r\n}","import vec2 from \"./vec2\";\r\n\r\nexport default class complex extends vec2 {\r\n    constructor(x: number, y: number) {\r\n        super(x, y);\r\n    }\r\n    static polar(r:number, theta:number): complex {\r\n        return new complex(r * Math.cos(theta), r * Math.sin(theta));\r\n    }\r\n    static empty():complex {\r\n        return new complex(0, 0);\r\n    }\r\n    conjugate(): complex {\r\n        return new complex(this.x, - this.y);\r\n    }\r\n    arg(): number {\r\n        return Math.atan2(this.y, this.x);\r\n    }\r\n    inverse(): complex {\r\n        let out = this.conjugate();\r\n        let sl = out.squaredLength();\r\n        out.scaleSelf(1.0 / sl);\r\n        return out;\r\n    }\r\n    static cMul(a:complex, b:complex): complex {\r\n        let out = complex.empty();\r\n        out.x = a.x * b.x - a.y * b.y;\r\n        out.y = a.y * b.x + a.x * b.y;\r\n        return out;\r\n    }\r\n    static cDiv(a:complex, b:complex): complex {\r\n        let out = complex.empty();\r\n        let bSquaredLength = b.squaredLength();\r\n        out.x = (a.x * b.x + a.y * b.y) / bSquaredLength;\r\n        out.y = (a.y * b.x - a.x * b.y) / bSquaredLength;\r\n        return out;\r\n    }\r\n    static cExp(z:complex): complex {\r\n        return complex.polar(Math.exp(z.x), z.y);\r\n    }\r\n    static cLog(z:complex): complex {\r\n        return new complex(Math.log(z.length()), z.arg());\r\n    }\r\n    static cPow(a:complex, b:complex): complex {\r\n        let theta = a.arg();\r\n        let lnR = Math.log(a.length());\r\n        let r = Math.exp(b.x * lnR - b.y * theta);\r\n        let angle = b.y * lnR + b.x * theta;\r\n        return complex.polar(r, angle);\r\n    }\r\n}","import axisAngle from \"./axisAngle\";\r\nimport complex from \"./complex\";\r\nimport mat2 from \"./mat2\";\r\nimport mat3 from \"./mat3\";\r\nimport mat4 from \"./mat4\";\r\nimport matrix from \"./matrix\";\r\nimport quat from \"./quat\";\r\nimport transform from \"./transform\";\r\nimport vec2 from \"./vec2\";\r\nimport vec3 from \"./vec3\";\r\nimport vec4 from \"./vec4\";\r\nimport vector from \"./vector\";\r\nimport * as utils from \"./utils\";\r\n\r\nexport { axisAngle, complex, vec2, vec3, vec4, vector, mat2, mat3, mat4, matrix, quat, transform, utils };","import mat3 from \"./mat3\";\r\nimport mat4 from \"./mat4\";\r\nimport { determinant2x2, Epsilon } from \"./utils\";\r\nimport vec2 from \"./vec2\";\r\n\r\nexport default class mat2 {\r\n    data: number[][];\r\n    constructor(m11: number, m12: number, m21: number, m22: number){\r\n        this.data = [\r\n            [m11, m12],\r\n            [m21, m22]\r\n        ];\r\n    }\r\n    clone(): mat2 {\r\n        return new mat2(this.data[0][0], this.data[0][1], this.data[1][0], this.data[1][1]);\r\n    }\r\n    set(i: number, j: number, value: number): void {\r\n        this.data[i][j] = value;\r\n    }\r\n    get(i: number, j: number): number {\r\n        return this.data[i][j];\r\n    }\r\n    static near(a: mat2, b: mat2, threshold?: number): boolean {\r\n        if (!threshold) {\r\n            threshold = Epsilon;\r\n        }\r\n        for (let i = 0; i < 3; i++) {\r\n            for (let j = 0; j < 3; j++) {\r\n                if (Math.abs(a.get(i, j) - b.get(i, j)) > threshold)\r\n                    return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    static empty(): mat2 {\r\n        return new mat2(\r\n            0, 0,\r\n            0, 0);\r\n    }\r\n    static identity(): mat2 {\r\n        return new mat2(\r\n            1, 0,\r\n            0, 1);\r\n    }\r\n    determinant(): number {\r\n        return determinant2x2(this.data[0][0], this.data[0][1], this.data[1][0], this.data[1][1]);\r\n    }  \r\n    toString(): string {\r\n        return `[\r\n    [${this.get(0, 0).toFixed(4)}, ${this.get(0, 1).toFixed(4)}]\r\n    [${this.get(1, 0).toFixed(4)}, ${this.get(1, 1).toFixed(4)}]\r\n]`;\r\n    }\r\n    preMulVec(v: vec2): vec2 {\r\n        return new vec2(v.x * this.data[0][0] + v.y* this.data[1][0], v.x * this.data[0][1] + v.y * this.data[1][1]);\r\n    }\r\n    postMulVec(v: vec2): vec2 {\r\n        return new vec2(v.x * this.data[0][0] + v.y * this.data[0][1], v.x * this.data[1][0] + v.y * this.data[1][1]);\r\n    }\r\n    static rotation(angle: number): mat2 {\r\n        let ca = Math.cos(angle);\r\n        let sa = Math.sin(angle);\r\n        return new mat2(ca, -sa, sa, ca);\r\n    }\r\n    toMat3(): mat3 {\r\n        return new mat3(\r\n            this.data[0][0], this.data[0][1], 0.,\r\n            this.data[1][0], this.data[1][1], 0.,\r\n            0., 0., 1.\r\n        );\r\n    }\r\n\r\n}","import axisAngle from \"./axisAngle\";\r\nimport mat2 from \"./mat2\";\r\nimport mat4 from \"./mat4\";\r\nimport quat from \"./quat\";\r\nimport { assert, determinant2x2, determinant3x3, Epsilon, near, SmallEpsilon } from \"./utils\";\r\nimport vec2 from \"./vec2\";\r\nimport vec3 from \"./vec3\";\r\n\r\n\r\nexport default class mat3 {\r\n    data: number[][];\r\n    constructor(m11: number, m12: number, m13: number,\r\n        m21: number, m22: number, m23: number,\r\n        m31: number, m32: number, m33: number) {\r\n        this.data = [\r\n            [m11, m12, m13],\r\n            [m21, m22, m23],\r\n            [m31, m32, m33]\r\n        ];\r\n    }\r\n    clone(): mat3 {\r\n        return new mat3(\r\n            this.get(0, 0), this.get(0, 1), this.get(0, 2),\r\n            this.get(1, 0), this.get(1, 1), this.get(1, 2),\r\n            this.get(2, 0), this.get(2, 1), this.get(2, 2),\r\n        );\r\n    }\r\n    static near(a: mat3, b: mat3, threshold?: number): boolean {\r\n        if (!threshold) {\r\n            threshold = Epsilon;\r\n        }\r\n        for (let i = 0; i < 3; i++) {\r\n            for (let j = 0; j < 3; j++) {\r\n                if (Math.abs(a.get(i, j) - b.get(i, j)) > threshold)\r\n                    return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    static empty(): mat3 {\r\n        return new mat3(\r\n            0, 0, 0,\r\n            0, 0, 0,\r\n            0, 0, 0);\r\n    }\r\n    static identity(): mat3 {\r\n        return new mat3(\r\n            1, 0, 0,\r\n            0, 1, 0,\r\n            0, 0, 1);\r\n    }\r\n    static fromAxisAngle(aa: axisAngle): mat3 {\r\n        let c = Math.cos(aa.angle);\r\n        let s = Math.sin(aa.angle);\r\n        let x = aa.axis.x;\r\n        let y = aa.axis.y;\r\n        let z = aa.axis.z;\r\n        return new mat3(\r\n            c + x * x * (1 - c), x * y * (1 - c) - z * s, x * z * (1 - c) + y * s,\r\n            y * x * (1 - c) + z * s, c + y * y * (1 - c), y * z * (1 - c) - x * s,\r\n            z * x * (1 - c) - y * s, z * y * (1 - c) + x * s, c + z * z * (1 - c));\r\n\r\n\r\n        return new mat3(\r\n            c + x * x * (1 - c), x * y * (1 - c) - z * s, x * z * (1 - c) + y * s,\r\n            y * x * (1 - c) + z * s, c + y * y * (1 - c), y * z * (1 - c) - x * s,\r\n            z * x * (1 - c) - y * s, z * y * (1 - c) + x * s, c + z * z * (1 - c));\r\n    }\r\n    trace(): number {\r\n        return this.get(0, 0) + this.get(1, 1) + this.get(2, 2);\r\n    }\r\n    toAxisAngle(): axisAngle {\r\n        let trace = this.trace();\r\n        if (near(trace, 3, SmallEpsilon)) {\r\n            let axis = new vec3(\r\n                this.get(2, 1) - this.get(1, 2),\r\n                this.get(0, 2) - this.get(2, 0),\r\n                this.get(1, 0) - this.get(0, 1)\r\n            );\r\n            let angle = Math.acos((trace - 1) / 2);\r\n            return new axisAngle(axis, angle);\r\n        } else {\r\n            let axis = new vec3(\r\n                this.get(2, 1) - this.get(1, 2),\r\n                this.get(0, 2) - this.get(2, 0),\r\n                this.get(1, 0) - this.get(0, 1)\r\n            );\r\n            let length = axis.l2norm();\r\n            let angle = Math.atan2(length, trace - 1);\r\n            if (Math.abs(angle) < SmallEpsilon)\r\n                axis = new vec3(1., 0., 0.);\r\n            return new axisAngle(axis, angle);\r\n        }\r\n    }\r\n    toEulerAngles(): vec3 {\r\n        throw new Error(\"Not implemented\");\r\n    }\r\n    //TODO: rewrite\r\n    //y - up\r\n    //x - left\r\n    //z - dir \r\n    static yaw(yaw: number): mat3 {\r\n        let cy = Math.cos(yaw);\r\n        let sy = Math.cos(yaw);\r\n        let m11 = 1;\r\n        let m12 = 0;\r\n        let m13 = 0;\r\n        let m21 = 0;\r\n        let m22 = cy;\r\n        let m23 = -sy;\r\n        let m31 = 0;\r\n        let m32 = sy;\r\n        let m33 = cy;\r\n        return new mat3(\r\n            m11, m12, m13,\r\n            m21, m22, m23,\r\n            m31, m32, m33);\r\n    }\r\n    static pitch(pitch: number): mat3 {\r\n        let cp = Math.cos(pitch);\r\n        let sp = Math.cos(pitch);\r\n        let m11 = cp;\r\n        let m12 = 0;\r\n        let m13 = sp;\r\n        let m21 = 0;\r\n        let m22 = 1;\r\n        let m23 = 0;\r\n        let m31 = -sp;\r\n        let m32 = 0;\r\n        let m33 = cp;\r\n        return new mat3(\r\n            m11, m12, m13,\r\n            m21, m22, m23,\r\n            m31, m32, m33);\r\n    }\r\n    static roll(roll: number): mat3 {\r\n        let cr = Math.cos(roll);\r\n        let sr = Math.cos(roll);\r\n        let m11 = cr;\r\n        let m12 = -sr;\r\n        let m13 = 0;\r\n        let m21 = sr;\r\n        let m22 = cr;\r\n        let m23 = 0;\r\n        let m31 = 0;\r\n        let m32 = 0;\r\n        let m33 = 1;\r\n        return new mat3(\r\n            m11, m12, m13,\r\n            m21, m22, m23,\r\n            m31, m32, m33);\r\n    }\r\n    static fromEulerAngles(yaw: number, pitch: number, roll: number): mat3 {\r\n        let cy = Math.cos(yaw);\r\n        let sy = Math.sin(yaw);\r\n        let cp = Math.cos(pitch);\r\n        let sp = Math.sin(pitch);\r\n        let cr = Math.cos(roll);\r\n        let sr = Math.sin(roll);\r\n        let m11 = cr * cp;\r\n        let m12 = - sr * cy + cr * sp * sy;\r\n        let m13 = sr * sy + cr * sp * cy;\r\n        let m21 = sr * cp;\r\n        let m22 = cr * cy + sr * sp * sy;\r\n        let m23 = -cr * sy + sr * sp * cy;\r\n        let m31 = -sp;\r\n        let m32 = cp * sy;\r\n        let m33 = cp * cy;\r\n        return new mat3(\r\n            m11, m12, m13,\r\n            m21, m22, m23,\r\n            m31, m32, m33);\r\n    }\r\n    set(i: number, j: number, value: number): void {\r\n        this.data[i][j] = value;\r\n    }\r\n    get(i: number, j: number): number {\r\n        return this.data[i][j];\r\n    }\r\n    toQuat(): quat {\r\n        throw new Error(\"Not implemented\");\r\n    }\r\n    toMat4(): mat4 {\r\n        return new mat4(\r\n            this.data[0][0], this.data[0][1], this.data[0][2], 0.,\r\n            this.data[1][0], this.data[1][1], this.data[1][2], 0.,\r\n            this.data[2][0], this.data[2][1], this.data[2][2], 0.,\r\n            0., 0., 0., 1.\r\n        );\r\n    }\r\n    static scale(a: mat3, l: number): mat3 {\r\n        return a.scale(l);\r\n    }\r\n    scale(l: number, out?: mat3): mat3 {\r\n        if (!out) {\r\n            out = this.clone();\r\n        }\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            for (let j = 0; j < 3; j++) {\r\n                out.set(i, j, this.get(i, j) * l);\r\n            }\r\n        }\r\n        return out;\r\n    }\r\n    scaleSelf(l: number): mat3 {\r\n        return this.scale(l, this);\r\n    }\r\n    static mul(a: mat3, b: mat3): mat3 {\r\n        return a.mul(b);\r\n    }\r\n    mul(m: mat3, out?: mat3): mat3 {\r\n        if (!out) {\r\n            out = this.clone();\r\n        }\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            for (let j = 0; j < 3; j++) {\r\n                let result = 0.0;\r\n                result += this.data[i][0] * m.data[0][j];\r\n                result += this.data[i][1] * m.data[1][j];\r\n                result += this.data[i][2] * m.data[2][j];\r\n                out.set(i, j, result);\r\n            }\r\n        }\r\n        return out;\r\n    }\r\n    mulSelf(m:mat3): mat3 {\r\n        return this.clone().mul(m, this);\r\n    }\r\n    determinant(): number {\r\n        return this.get(0, 0) * (this.get(1, 1) * this.get(2, 2) - this.get(1, 2) * this.get(2, 1))\r\n            - this.get(0, 1) * (this.get(1, 0) * this.get(2, 2) - this.get(2, 0) * this.get(1, 2))\r\n            + this.get(0, 2) * (this.get(1, 0) * this.get(2, 1) - this.get(2, 0) * this.get(1, 1));\r\n    }\r\n    static solve(m: mat3, v: vec3): vec3 {\r\n        let d = m.determinant();\r\n        let dx = determinant3x3(\r\n            v.x, m.get(0, 1), m.get(0, 2),\r\n            v.y, m.get(1, 1), m.get(1, 2),\r\n            v.z, m.get(2, 1), m.get(2, 2)\r\n        );\r\n        let dy = determinant3x3(\r\n            m.get(0, 0), v.x, m.get(0, 2),\r\n            m.get(1, 0), v.y, m.get(1, 2),\r\n            m.get(2, 0), v.z, m.get(2, 2)\r\n        );\r\n        let dz = determinant3x3(\r\n            m.get(0, 0), m.get(0, 1), v.x,\r\n            m.get(1, 0), m.get(1, 1), v.y,\r\n            m.get(2, 0), m.get(2, 1), v.z\r\n        );\r\n        return new vec3(dx / d, dy / d, dz / d);\r\n    }\r\n    inverse(): mat3 {\r\n        let d = this.determinant();\r\n        let m11 = determinant2x2(\r\n            this.get(1, 1), this.get(1, 2),\r\n            this.get(2, 1), this.get(2, 2)\r\n        );\r\n        let m12 = determinant2x2(\r\n            this.get(0, 2), this.get(0, 1),\r\n            this.get(2, 2), this.get(2, 1)\r\n        );\r\n        let m13 = determinant2x2(\r\n            this.get(0, 1), this.get(0, 2),\r\n            this.get(1, 1), this.get(1, 2)\r\n        );\r\n        let m21 = determinant2x2(\r\n            this.get(1, 2), this.get(1, 0),\r\n            this.get(2, 2), this.get(2, 0)\r\n        );\r\n        let m22 = determinant2x2(\r\n            this.get(0, 0), this.get(0, 2),\r\n            this.get(2, 0), this.get(2, 2)\r\n        );\r\n        let m23 = determinant2x2(\r\n            this.get(0, 2), this.get(0, 0),\r\n            this.get(1, 2), this.get(1, 0)\r\n        );\r\n        let m31 = determinant2x2(\r\n            this.get(1, 0), this.get(1, 1),\r\n            this.get(2, 0), this.get(2, 1)\r\n        );\r\n        let m32 = determinant2x2(\r\n            this.get(0, 1), this.get(0, 0),\r\n            this.get(2, 1), this.get(2, 0)\r\n        );\r\n        let m33 = determinant2x2(\r\n            this.get(0, 0), this.get(0, 1),\r\n            this.get(1, 0), this.get(1, 1)\r\n        );\r\n        return new mat3(\r\n            m11, m12, m13,\r\n            m21, m22, m23,\r\n            m31, m32, m33\r\n        ).scaleSelf(1.0 / d);\r\n    }\r\n    transpose(): mat3 {\r\n        return new mat3(\r\n            this.get(0, 0), this.get(1, 0), this.get(2, 0),\r\n            this.get(0, 1), this.get(1, 1), this.get(2, 1),\r\n            this.get(0, 2), this.get(1, 2), this.get(2, 2)\r\n        );\r\n    }\r\n    transform(point: vec3): vec3 {\r\n        let result = [0, 0, 0];\r\n        for (let i = 0; i < 3; i++) {\r\n            result[i] += this.get(i, 0) * point.x;\r\n            result[i] += this.get(i, 1) * point.y;\r\n            result[i] += this.get(i, 2) * point.z;\r\n        }\r\n        return new vec3(result[0], result[1], result[2]);\r\n    }\r\n    toString(): string {\r\n        return `[\r\n    [${this.get(0, 0).toFixed(4)}, ${this.get(0, 1).toFixed(4)}, ${this.get(0, 2).toFixed(4)}]\r\n    [${this.get(1, 0).toFixed(4)}, ${this.get(1, 1).toFixed(4)}, ${this.get(1, 2).toFixed(4)}]\r\n    [${this.get(2, 0).toFixed(4)}, ${this.get(2, 1).toFixed(4)}, ${this.get(2, 2).toFixed(4)}]\r\n]`;\r\n    }\r\n    // todo:\r\n    static from2DRotation(angle:number, axis:number = 2): mat3 {\r\n        let ca = Math.cos(angle);\r\n        let sa = Math.sin(angle);\r\n        assert(axis >= 0 && axis < 3, \"Wrong axis\");\r\n        let result = mat3.empty();\r\n        let f = 2 - axis;\r\n        let s = (f + 1) % 3;\r\n        result.set(f, f, ca);\r\n        result.set(f, s, -sa);\r\n        result.set(s, f, sa);\r\n        result.set(s, s, ca);\r\n        return result;\r\n    }\r\n    static fromTRS(t:vec2, r:number, s:vec2):mat3 {\r\n        throw new Error(\"Not implemented\");\r\n    }\r\n    extractMat2(): mat2 {\r\n        return new mat2(\r\n            this.get(0, 0), this.get(0, 1),\r\n            this.get(1, 0), this.get(1, 1)\r\n        );\r\n    }\r\n}","import mat3 from \"./mat3\";\r\nimport quat from \"./quat\";\r\nimport vec3 from \"./vec3\";\r\nimport { determinant3x3, determinant4x4, Epsilon } from \"./utils\";\r\nimport vec4 from \"./vec4\";\r\n\r\n\r\nexport default class mat4 {\r\n    data: number[][];\r\n    constructor(m11: number, m12: number, m13: number, m14: number,\r\n        m21: number, m22: number, m23: number, m24: number,\r\n        m31: number, m32: number, m33: number, m34: number,\r\n        m41: number, m42: number, m43: number, m44: number) {\r\n        this.data = [\r\n            [m11, m12, m13, m14],\r\n            [m21, m22, m23, m24],\r\n            [m31, m32, m33, m34],\r\n            [m41, m42, m43, m44]\r\n        ];\r\n    }\r\n    clone(): mat4 {\r\n        return new mat4(\r\n            this.get(0, 0), this.get(0, 1), this.get(0, 2), this.get(0, 3),\r\n            this.get(1, 0), this.get(1, 1), this.get(1, 2), this.get(2, 3),\r\n            this.get(2, 0), this.get(2, 1), this.get(2, 2), this.get(2, 3),\r\n            this.get(3, 0), this.get(3, 1), this.get(3, 2), this.get(3, 3)\r\n        );\r\n    }\r\n    static near(a: mat4, b: mat4, threshold?: number): boolean {\r\n        if (!threshold)\r\n            threshold = Epsilon;\r\n\r\n        for (let i = 0; i < 4; i++) {\r\n            for (let j = 0; j < 4; j++) {\r\n                if (Math.abs(a.get(i, j) - b.get(i, j)) > threshold)\r\n                    return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    static empty(): mat4 {\r\n        return new mat4(\r\n            0, 0, 0, 0,\r\n            0, 0, 0, 0,\r\n            0, 0, 0, 0,\r\n            0, 0, 0, 0);\r\n    }\r\n    static identity(): mat4 {\r\n        return new mat4(\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            0, 0, 0, 1);\r\n    }\r\n    set(i: number, j: number, value: number): void {\r\n        this.data[i][j] = value;\r\n    }\r\n    get(i: number, j: number): number {\r\n        return this.data[i][j];\r\n    }\r\n    extractMat3(): mat3 {\r\n        return new mat3(\r\n            this.get(0, 0), this.get(0, 1), this.get(0, 2),\r\n            this.get(1, 0), this.get(1, 1), this.get(1, 2),\r\n            this.get(2, 0), this.get(2, 1), this.get(2, 2)\r\n        );\r\n    }\r\n    determinant(): number {\r\n        return determinant4x4(\r\n            this.get(0, 0), this.get(0, 1), this.get(0, 2), this.get(0, 3),\r\n            this.get(1, 0), this.get(1, 1), this.get(1, 2), this.get(1, 3),\r\n            this.get(2, 0), this.get(2, 1), this.get(2, 2), this.get(2, 3),\r\n            this.get(3, 0), this.get(3, 1), this.get(3, 2), this.get(3, 3)\r\n        );\r\n    }\r\n    extractTranslation(): vec3 {\r\n        return new vec3(this.get(0, 3), this.get(1, 3), this.get(2, 3));\r\n    }\r\n    transformPoint(p: vec3): vec3 {\r\n        let result = [0, 0, 0, 0];\r\n        for (let i = 0; i < 4; i++) {\r\n            result[i] += this.get(i, 0) * p.x;\r\n            result[i] += this.get(i, 1) * p.y;\r\n            result[i] += this.get(i, 2) * p.z;\r\n            result[i] += this.get(i, 3);\r\n        }\r\n        return new vec3(result[0] / result[3], result[1] / result[3], result[2] / result[3]);\r\n    }\r\n    transformVector(v: vec3): vec3 {\r\n        let result = [0, 0, 0];\r\n        for (let i = 0; i < 3; i++) {\r\n            result[i] += this.get(i, 0) * v.x;\r\n            result[i] += this.get(i, 1) * v.y;\r\n            result[i] += this.get(i, 2) * v.z;\r\n        }\r\n        return new vec3(result[0], result[1], result[2]);\r\n    }\r\n    postMulVec(p: vec4): vec4 {\r\n        let result = [0, 0, 0, 0];\r\n        for (let i = 0; i < 4; i++) {\r\n            result[i] += this.get(i, 0) * p.x;\r\n            result[i] += this.get(i, 1) * p.y;\r\n            result[i] += this.get(i, 2) * p.z;\r\n            result[i] += this.get(i, 3) * p.w;\r\n        }\r\n        return new vec4(result[0], result[1], result[2], result[3]);\r\n    }\r\n    transpose(): mat4 {\r\n        return new mat4(\r\n            this.get(0, 0), this.get(1, 0), this.get(2, 0), this.get(3, 0),\r\n            this.get(0, 1), this.get(1, 1), this.get(2, 1), this.get(3, 1),\r\n            this.get(0, 2), this.get(1, 2), this.get(2, 2), this.get(3, 2),\r\n            this.get(0, 3), this.get(1, 3), this.get(2, 3), this.get(3, 3)\r\n        );\r\n    }\r\n    static scale(a: mat4, l: number): mat4 {\r\n        return a.scale(l);\r\n    }\r\n    scale(l: number, out?: mat4): mat4 {\r\n        if (!out) {\r\n            out = this.clone();\r\n        }\r\n\r\n        for (let i = 0; i < 4; i++) {\r\n            for (let j = 0; j < 4; j++)\r\n                out.set(i, j, this.get(i, j) * l);\r\n        }\r\n        return out;\r\n    }\r\n    scaleSelf(l: number): mat4 {\r\n        return this.scale(l, this);\r\n    }\r\n    static mul(a: mat4, b: mat4): mat4 {\r\n        return a.mul(b);\r\n    }\r\n    mul(m: mat4, out?: mat4): mat4 {\r\n        if (!out) {\r\n            out = this.clone();\r\n        }\r\n\r\n        for (let i = 0; i < 4; i++) {\r\n            for (let j = 0; j < 4; j++) {\r\n                let result = 0.0;\r\n                result += this.data[i][0] * m.data[0][j];\r\n                result += this.data[i][1] * m.data[1][j];\r\n                result += this.data[i][2] * m.data[2][j];\r\n                result += this.data[i][3] * m.data[3][j];\r\n                out.set(i, j, result);\r\n            }\r\n        }\r\n        return out;\r\n    }\r\n    mulSelf(m: mat4): mat4 {\r\n        return this.clone().mul(m, this);\r\n    }\r\n    static translation(t: vec3): mat4 {\r\n        return new mat4(\r\n            1, 0, 0, t.x,\r\n            0, 1, 0, t.y,\r\n            0, 0, 1, t.z,\r\n            0, 0, 0, 1);\r\n    }\r\n    static fromMat3(m: mat3): mat4 {\r\n        return new mat4(\r\n            m.get(0, 0), m.get(0, 1), m.get(0, 2), 0,\r\n            m.get(1, 0), m.get(1, 1), m.get(1, 2), 0,\r\n            m.get(2, 0), m.get(2, 1), m.get(2, 2), 0,\r\n            0, 0, 0, 1);\r\n    }\r\n    static rotation(r: quat): mat4 {\r\n        return r.toMat4();\r\n    }\r\n    static fromScale(s: vec3): mat4 {\r\n        return new mat4(\r\n            s.x, 0, 0, 0,\r\n            0, s.y, 0, 0,\r\n            0, 0, s.z, 0,\r\n            0, 0, 0, 1);\r\n    }\r\n    static fromTRS(t: vec3, r: quat, s: vec3): mat4 {\r\n        let rMat = r.toMat3();\r\n        return new mat4(\r\n            rMat.get(0, 0) * s.x, rMat.get(0, 1) * s.y, rMat.get(0, 2) * s.z, t.x,\r\n            rMat.get(1, 0) * s.x, rMat.get(1, 1) * s.y, rMat.get(1, 2) * s.z, t.y,\r\n            rMat.get(2, 0) * s.x, rMat.get(2, 1) * s.y, rMat.get(2, 2) * s.z, t.z,\r\n            0, 0, 0, 1\r\n        );\r\n    }\r\n    inverse(): mat4 {\r\n        let d = this.determinant();\r\n        let m11 = determinant3x3(\r\n            this.get(1, 1), this.get(1, 2), this.get(1, 3),\r\n            this.get(2, 1), this.get(2, 2), this.get(2, 3),\r\n            this.get(3, 1), this.get(3, 2), this.get(3, 3)\r\n        );\r\n        let m21 = determinant3x3(\r\n            this.get(1, 0), this.get(1, 2), this.get(1, 3),\r\n            this.get(2, 0), this.get(2, 2), this.get(2, 3),\r\n            this.get(3, 0), this.get(3, 2), this.get(3, 3)\r\n        );\r\n        let m31 = determinant3x3(\r\n            this.get(1, 0), this.get(1, 1), this.get(1, 3),\r\n            this.get(2, 0), this.get(2, 1), this.get(2, 3),\r\n            this.get(3, 0), this.get(3, 1), this.get(3, 3)\r\n        );\r\n        let m41 = determinant3x3(\r\n            this.get(1, 0), this.get(1, 1), this.get(1, 2),\r\n            this.get(2, 0), this.get(2, 1), this.get(2, 2),\r\n            this.get(3, 0), this.get(3, 1), this.get(3, 2)\r\n        );\r\n        let m12 = determinant3x3(\r\n            this.get(0, 1), this.get(0, 2), this.get(0, 3),\r\n            this.get(2, 1), this.get(2, 2), this.get(2, 3),\r\n            this.get(3, 1), this.get(3, 2), this.get(3, 3)\r\n        );\r\n        let m22 = determinant3x3(\r\n            this.get(0, 0), this.get(0, 2), this.get(0, 3),\r\n            this.get(2, 0), this.get(2, 2), this.get(2, 3),\r\n            this.get(3, 0), this.get(3, 2), this.get(3, 3)\r\n        );\r\n        let m32 = determinant3x3(\r\n            this.get(0, 0), this.get(0, 1), this.get(0, 3),\r\n            this.get(2, 0), this.get(2, 1), this.get(2, 3),\r\n            this.get(3, 0), this.get(3, 1), this.get(3, 3)\r\n        );\r\n        let m42 = determinant3x3(\r\n            this.get(0, 0), this.get(0, 1), this.get(0, 2),\r\n            this.get(2, 0), this.get(2, 1), this.get(2, 2),\r\n            this.get(3, 0), this.get(3, 1), this.get(3, 2)\r\n        );\r\n        let m13 = determinant3x3(\r\n            this.get(0, 1), this.get(0, 2), this.get(0, 3),\r\n            this.get(1, 1), this.get(1, 2), this.get(1, 3),\r\n            this.get(3, 1), this.get(3, 2), this.get(3, 3)\r\n        );\r\n        let m23 = determinant3x3(\r\n            this.get(0, 0), this.get(0, 2), this.get(0, 3),\r\n            this.get(1, 0), this.get(1, 2), this.get(1, 3),\r\n            this.get(3, 0), this.get(3, 2), this.get(3, 3)\r\n        );\r\n        let m33 = determinant3x3(\r\n            this.get(0, 0), this.get(0, 1), this.get(0, 3),\r\n            this.get(1, 0), this.get(1, 1), this.get(1, 3),\r\n            this.get(3, 0), this.get(3, 1), this.get(3, 3)\r\n        );\r\n        let m43 = determinant3x3(\r\n            this.get(0, 0), this.get(0, 1), this.get(0, 2),\r\n            this.get(1, 0), this.get(1, 1), this.get(1, 2),\r\n            this.get(3, 0), this.get(3, 1), this.get(3, 2)\r\n        );\r\n        let m14 = determinant3x3(\r\n            this.get(0, 1), this.get(0, 2), this.get(0, 3),\r\n            this.get(1, 1), this.get(1, 2), this.get(1, 3),\r\n            this.get(2, 1), this.get(2, 2), this.get(2, 3)\r\n        );\r\n        let m24 = determinant3x3(\r\n            this.get(0, 0), this.get(0, 2), this.get(0, 3),\r\n            this.get(1, 0), this.get(1, 2), this.get(1, 3),\r\n            this.get(2, 0), this.get(2, 2), this.get(2, 3)\r\n        );\r\n        let m34 = determinant3x3(\r\n            this.get(0, 0), this.get(0, 1), this.get(0, 3),\r\n            this.get(1, 0), this.get(1, 1), this.get(1, 3),\r\n            this.get(2, 0), this.get(2, 1), this.get(2, 3)\r\n        );\r\n        let m44 = determinant3x3(\r\n            this.get(0, 0), this.get(0, 1), this.get(0, 2),\r\n            this.get(1, 0), this.get(1, 1), this.get(1, 2),\r\n            this.get(2, 0), this.get(2, 1), this.get(2, 2)\r\n        );\r\n        return new mat4(\r\n            m11, -m12, m13, -m14,\r\n            -m21, m22, -m23, m24,\r\n            m31, -m32, m33, -m34,\r\n            -m41, m42, -m43, m44\r\n        ).scaleSelf(1 / d);\r\n    }\r\n    toString(): string {\r\n        return `[\r\n    [${this.get(0, 0).toFixed(4)}, ${this.get(0, 1).toFixed(4)}, ${this.get(0, 2).toFixed(4)}, ${this.get(0, 3).toFixed(4)}]\r\n    [${this.get(1, 0).toFixed(4)}, ${this.get(1, 1).toFixed(4)}, ${this.get(1, 2).toFixed(4)}, ${this.get(1, 3).toFixed(4)}]\r\n    [${this.get(2, 0).toFixed(4)}, ${this.get(2, 1).toFixed(4)}, ${this.get(2, 2).toFixed(4)}, ${this.get(2, 3).toFixed(4)}]\r\n    [${this.get(3, 0).toFixed(4)}, ${this.get(3, 1).toFixed(4)}, ${this.get(3, 2).toFixed(4)}, ${this.get(3, 3).toFixed(4)}]\r\n]`;\r\n    }\r\n}","import { assert } from \"./utils\";\r\nimport vector from \"./vector\";\r\n\r\nexport default class matrix {\r\n    w: number;\r\n    h: number;\r\n    data: number[];\r\n    constructor(data: number[], w: number, h: number) {\r\n        this.data = data;\r\n        this.w = w;\r\n        this.h = h;\r\n    }\r\n    static empty(w: number, h: number): matrix {\r\n        let data: number[];\r\n        (data = []).length = w * h;\r\n        data.fill(0);\r\n        return new matrix(data, w, h);\r\n    }\r\n    copy(): matrix {\r\n        return new matrix(this.data.slice(), this.w, this.h);\r\n    }\r\n    clone(): matrix {\r\n        return new matrix(this.data.slice(), this.w, this.h);\r\n    }\r\n    width(): number {\r\n        return this.w;\r\n    }\r\n    height(): number {\r\n        return this.h;\r\n    }\r\n    static identity(size:number): matrix {\r\n        let data: number[];\r\n        (data = []).length = size * size;\r\n        data.fill(0);\r\n        for (let i = 0; i < size; i++) {\r\n            data[i + i * size] = 1;\r\n        }\r\n        return new matrix(data, size, size);\r\n    }\r\n    static mult(a: matrix, b: matrix): matrix {\r\n        assert(a.w == b.h, \"Matrix dimensions aren't compatible\");\r\n        let result = matrix.empty(b.w, a.h);\r\n        //for each cell in the result\r\n        for (let j = 0; j < a.h; j++) {\r\n            for (let i = 0; i < b.w; i++) {\r\n                let value = 0;\r\n                for (let k = 0; k < a.w; k++) {\r\n                    value += a.get(j, k) * b.get(k, i);\r\n                }\r\n                result.set(value, j, i);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    static multVec(a: matrix, b: vector): vector {\r\n        assert(a.w == b.data.length, \"Width of matrix isn't compatible with vector's length\");\r\n        let result = vector.empty(a.h);\r\n        for (let j = 0; j < a.h; j++) {\r\n            let v = 0;\r\n            for (let i = 0; i < a.w; i++) {\r\n                v += a.get(j, i) * b.get(i);\r\n            }\r\n            result.set(j, v);\r\n        }\r\n        return result;\r\n    }\r\n    get(row: number, column: number): number {\r\n        return this.data[row * this.w + column];\r\n    }\r\n    // todo: reverse order of arguments\r\n    set(value: number, row: number, column: number): void {\r\n        this.data[row * this.w + column] = value;\r\n    }\r\n    transpose(): matrix {\r\n        let result = [];\r\n        for (let i = 0; i < this.w; i++) {\r\n            for (let j = 0; j < this.h; j++) {\r\n                result.push(this.data[i + j * this.w]);\r\n            }\r\n        }\r\n        return new matrix(result, this.h, this.w);\r\n    }\r\n    static solve(A: matrix, b: vector): vector {\r\n        assert(A.w == b.data.length, \"Width of matrix isn't compatible with vector's length\");\r\n        assert(A.w == A.h, \"Non-square matrix\");\r\n        var rang = b.size();\r\n        var x = vector.empty(rang);\r\n        let epsilon = 0.001\r\n        var indexes = new Array(rang);\r\n        for (var i = 0; i < rang; i++) {\r\n            indexes[i] = i;\r\n        }\r\n        for (var l = 0; l < rang; l++) {\r\n            var max = l;\r\n            for (var i = l + 1; i < rang; i++) {\r\n                if (Math.abs(A.get(indexes[i], l)) > Math.abs(A.get(indexes[max], l)))\r\n                    max = i;\r\n            }\r\n            if (max != l) {\r\n                var temp = indexes[l];\r\n                indexes[l] = indexes[max];\r\n                indexes[max] = temp;\r\n            }\r\n            if (Math.abs(A.get(indexes[l], l)) < epsilon) {\r\n                for (var i = 0; i < rang; i++)\r\n                    x.set(i, 0.0);\r\n                return x;\r\n            }\r\n            for (var i = l + 1; i < rang; i++)\r\n                A.set(A.get(indexes[l], i) / A.get(indexes[l], l), indexes[l], i);\r\n            b.set(indexes[l], b.get(indexes[l]) / A.get(indexes[l], l));\r\n            A.set(1, indexes[l], l);\r\n\r\n            for (var i = l + 1; i < rang; i++) {\r\n                for (var k = l + 1; k < rang; k++)\r\n                    A.set(A.get(indexes[i], k) - A.get(indexes[i], l) * A.get(indexes[l], k), indexes[i], k);\r\n                b.set(indexes[i], b.get(indexes[i]) - A.get(indexes[i], l) * b.get(indexes[l]));\r\n                A.set(0, indexes[i], l);\r\n            }\r\n        }\r\n        x.set(rang - 1, b.get(indexes[rang - 1]));\r\n        for (var i = rang - 2; i > -1; i--) {\r\n            var k = 0.;\r\n            for (var j = i + 1; j < rang; j++) {\r\n                k = k + A.get(indexes[i], j) * x.get(j);\r\n            }\r\n            x.set(i, b.get(indexes[i]) - k);\r\n        }\r\n        return x;\r\n    }\r\n    inverse(): matrix {\r\n        assert(this.w == this.h, \"Non-square matrix\");\r\n        let result = this.copy();\r\n        for (let i = 0; i < this.w; i++) {\r\n            let v = vector.empty(this.w);\r\n            v.set(i, 1);\r\n            let column = matrix.solve(this.copy(), v);\r\n            for (let j = 0; j < this.h; j++) {\r\n                result.set(column.get(j), j, i);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    print(fractionDigits: number): string {\r\n        if (!fractionDigits)\r\n            fractionDigits = 4;\r\n        let result = \"\";\r\n        for (let j = 0; j < this.h; j++) {\r\n            result += j > 0 ? \"\\n| \" : \"| \";\r\n            for (let i = 0; i < this.w; i++)\r\n                result += this.data[i + j * this.w].toFixed(fractionDigits) + \" \"\r\n            result += \"|\";\r\n        }\r\n        return result;\r\n    }\r\n}","import axisAngle from \"./axisAngle\";\r\nimport mat3 from \"./mat3\";\r\nimport mat4 from \"./mat4\";\r\nimport { Epsilon, SmallEpsilon } from \"./utils\";\r\nimport vec3 from \"./vec3\";\r\n\r\nexport default class quat{\r\n    v: vec3;\r\n    s: number;\r\n    constructor(v:vec3, s:number){\r\n        this.v = v;\r\n        this.s = s;\r\n    }\r\n    static fromVectors(a:vec3, b:vec3):quat{\r\n        let axis = vec3.cross(a, b);\r\n        let cos = vec3.dot(a, b) / a.l2norm() / b.l2norm();\r\n        if(1 - Math.abs(cos) <= 0.0001){\r\n            axis = new vec3(1, 0, 0);\r\n        }\r\n        let angle = Math.acos(cos);\r\n        return this.fromAxisAngle(new axisAngle(axis, angle));\r\n    }\r\n    clone():quat{\r\n        return new quat(this.v.clone(), this.s);\r\n    }\r\n    static near(a:quat, b:quat, threshold?:number): boolean{\r\n        if(!threshold){\r\n            threshold = Epsilon;\r\n        }\r\n        return Math.abs(a.s - b.s) <= threshold && vec3.near(a.v, b.v, threshold);\r\n    }\r\n    static identity():quat{\r\n        return new quat(new vec3(0., 0., 0.), 1.0);\r\n    }\r\n    static empty():quat{\r\n        return new quat(vec3.empty(), 0.0);\r\n    }\r\n    static fromAxisAngle(o:axisAngle):quat{\r\n        return new quat(o.axis.normalized().scaleSelf(Math.sin(o.angle/2)), Math.cos(o.angle/2));\r\n    }\r\n    static fromComponents(x:number, y:number, z:number, w:number):quat{\r\n        return new quat(new vec3(x, y, z), w);\r\n    }\r\n    // rotate around x, rotate around y, rotate around z\r\n    static fromEulerAngles(yaw:number, pitch:number, roll:number):quat{\r\n        let cy = Math.cos(yaw / 2);\r\n        let sy = Math.sin(yaw / 2);\r\n        let cp = Math.cos(pitch / 2);\r\n        let sp = Math.sin(pitch / 2);\r\n        let cr = Math.cos(roll / 2);\r\n        let sr = Math.sin(roll / 2);\r\n        return new quat(new vec3(\r\n                sy * cp * cr - cy * sp * sr,\r\n                cy * sp * cr + sy * cp * sr,\r\n                cy * cp * sr - sy * sp * cr\r\n            ),\r\n            cy * cp * cr + sy * sp * sr\r\n        );\r\n    }\r\n    static fromMat3(m:mat3):quat{\r\n        return m.toQuat();\r\n    }\r\n    //add\r\n    static add(a:quat, b:quat):quat{\r\n        return a.add(b);\r\n    }\r\n    add(q:quat, out?:quat):quat{\r\n        if (!out) {\r\n            out = this.clone();\r\n        }\r\n        this.v.add(q.v, out.v);\r\n        out.s = this.s + q.s;\r\n        return out;\r\n    }\r\n    addSelf(q:quat):quat{\r\n        return this.add(q, this);\r\n    }\r\n    //sub\r\n    static sub(a:quat, b:quat):quat{\r\n        return a.sub(b);\r\n    }\r\n    sub(q:quat, out?:quat):quat{\r\n        if (!out) {\r\n            out = this.clone();\r\n        }\r\n        this.v.sub(q.v, out.v);\r\n        out.s = this.s - q.s;\r\n        return out;\r\n    }\r\n    subSelf(q:quat):quat{\r\n        return this.sub(q, this);\r\n    }\r\n    conj():quat{\r\n        return new quat(new vec3(-this.v.x, -this.v.y, -this.v.z), this.s);\r\n    }\r\n    inverse():quat{\r\n        return this.conj().scale(1.0 / this.squaredLength());\r\n    }\r\n    //mul\r\n    static mul(a:quat, b:quat):quat{\r\n        return a.mul(b);\r\n    }\r\n    mul(q:quat, out?:quat):quat{\r\n        if (!out) {\r\n            out = this.clone();\r\n        }\r\n        const {x, y, z} = this.v;\r\n        const s = this.s;\r\n        out.s = s * q.s - x * q.v.x - y * q.v.y - z * q.v.z;\r\n        out.v.x = s * q.v.x + x * q.s + y * q.v.z - z * q.v.y;\r\n        out.v.y = s * q.v.y - x * q.v.z + y * q.s + z * q.v.x;\r\n        out.v.z = s * q.v.z + x * q.v.y - y * q.v.x + z * q.s;\r\n        //out.v = vec3.cross(this.v, q.v).addSelf(q.v.scale(s)).addSelf(this.v.scale(q.s));\r\n        return out;\r\n    }\r\n    mulSelf(q:quat):quat{\r\n        return this.mul(q, this);\r\n    }\r\n    //div\r\n    static div(a:quat, b:quat):quat{\r\n        return a.div(b);\r\n    }\r\n    div(q:quat, out?:quat):quat{\r\n        if (!out) {\r\n            out = this.clone();\r\n        }\r\n        out.s = this.s * q.s + vec3.dot(this.v, q.v);\r\n        out.v = this.v.scale(q.s).subSelf(q.v.scale(this.s)).subSelf(vec3.cross(this.v, q.v));\r\n        return out.scaleSelf(1.0 / q.squaredLength());\r\n    }\r\n    divSelf(q:quat):quat{\r\n        return this.div(q, this);\r\n    }\r\n    //scale\r\n    static scale(q:quat, l:number):quat{\r\n        return q.scale(l);\r\n    }\r\n    scale(l:number, out?:quat):quat{\r\n        if (!out) {\r\n            out = this.clone();\r\n        }\r\n        out.s = this.s * l;\r\n        this.v.scale(l, out.v);\r\n        return out;\r\n    }\r\n    scaleSelf(l:number):quat{\r\n        return this.scale(l, this);\r\n    }\r\n    normalize():quat{\r\n        let l = this.l2norm();\r\n        return this.scaleSelf(1./l);\r\n    }\r\n    normalized():quat{\r\n        return this.clone().normalize();\r\n    }\r\n    toMat3():mat3{\r\n        const {x, y, z} = this.v;\r\n        const x2 = this.v.x * this.v.x;\r\n        const y2 = this.v.y * this.v.y;\r\n        const z2 = this.v.z * this.v.z;\r\n        return new mat3(\r\n            1. - 2. * y2 - 2. * z2, \r\n            2. * x * y - 2. * this.s * z, \r\n            2. * x * z + 2. * this.s * y,\r\n\r\n            2. * x * y + 2. * this.s * z, \r\n            1.0 - 2. * x2 - 2. * z2, \r\n            2. * y * z - 2. * this.s * x,\r\n\r\n            2. * x * z - 2.0 * this.s * y, \r\n            2. * y * z + 2.0 * this.s * x,\r\n            1.0 - 2. * x2 - 2. * y2\r\n            );\r\n    }\r\n    toMat4():mat4{\r\n        const {x, y, z} = this.v;\r\n        const x2 = this.v.x * this.v.x;\r\n        const y2 = this.v.y * this.v.y;\r\n        const z2 = this.v.z * this.v.z;\r\n        return new mat4(\r\n            1. - 2. * y2 - 2. * z2, \r\n            2. * x * y - 2. * this.s * z, \r\n            2. * x * z + 2. * this.s * y,\r\n            0.,\r\n\r\n            2. * x * y + 2. * this.s * z, \r\n            1.0 - 2. * x2 - 2. * z2, \r\n            2. * y * z - 2. * this.s * x,\r\n            0.,\r\n\r\n            2. * x * z - 2.0 * this.s * y, \r\n            2. * y * z + 2.0 * this.s * x,\r\n            1.0 - 2. * x2 - 2. * y2,\r\n            0.,\r\n\r\n            0.,\r\n            0.,\r\n            0.,\r\n            1.\r\n            );\r\n    }\r\n    toAxisAngle():axisAngle{\r\n        let angle = 2. * Math.atan2(this.v.l2norm(), this.s);\r\n        angle = (Math.abs(angle) > Math.PI?2 * Math.PI * Math.sign(angle) - angle: angle);\r\n        let axis = this.v.clone().normalize();\r\n        let ca = Math.sqrt(1.0 - this.s * this.s);\r\n        if(ca < SmallEpsilon){\r\n            axis = new vec3(1., 0., 0.);\r\n        }\r\n        return new axisAngle(axis, angle);\r\n    }\r\n    toEulerAngles():vec3{\r\n        throw new Error(\"Not implemented\");\r\n    }\r\n    rotate(v:vec3):vec3{\r\n        return this.mul(new quat(v.clone(), 0.0)).mulSelf(this.conj()).v;\r\n    }\r\n    l2norm():number{\r\n        return Math.sqrt(this.squaredLength());\r\n    }\r\n    squaredLength():number{\r\n        return this.v.squaredLength() + this.s * this.s;\r\n    }\r\n    toString():string{\r\n        return `[${this.v.x.toFixed(4)}i, ${this.v.y.toFixed(4)}j, ${this.v.z.toFixed(4)}k, ${this.s.toFixed(4)}]`;\r\n    }\r\n}","import mat4 from \"./mat4\";\r\nimport quat from \"./quat\";\r\nimport { assert, near } from \"./utils\";\r\nimport vec3 from \"./vec3\";\r\n\r\nexport default class transform{\r\n    translation:vec3;\r\n    rotation:quat;\r\n    scale:vec3;\r\n    constructor(translation:vec3, rotation:quat, scale:vec3){\r\n        this.translation = translation;\r\n        this.rotation = rotation;\r\n        this.scale = scale;\r\n    }\r\n    hasUniformScale(): boolean {\r\n        return near(this.scale.x, this.scale.y) && near(this.scale.x, this.scale.z) && near(this.scale.y, this.scale.z);\r\n    }\r\n    clone():transform{\r\n        return new transform(this.translation.clone(), this.rotation.clone(), this.scale.clone());\r\n    }\r\n    static identity(): transform{\r\n        return new transform(new vec3(0, 0, 0), quat.identity(), new vec3(1, 1, 1));\r\n    }\r\n    toAffine():mat4{\r\n        return mat4.fromTRS(this.translation, this.rotation, this.scale);\r\n    }\r\n    transformPoint(point:vec3):vec3{\r\n        return this.rotation.rotate(vec3.mul(point, this.scale)).addSelf(this.translation);\r\n    }\r\n    transformVector(vector:vec3):vec3{\r\n        return this.rotation.rotate(vec3.mul(vector, this.scale));\r\n    }\r\n    transformInversePoint(point:vec3):vec3 {\r\n        return this.rotation.inverse().rotate(vec3.sub(point, this.translation)).divSelf(this.scale);\r\n    }\r\n    transformInverseVector(vector:vec3):vec3 {\r\n        return this.rotation.inverse().rotate(vector).divSelf(this.scale);\r\n    }\r\n    // todo: test\r\n    // only possible with uniform scale\r\n    inverse():transform {\r\n        assert(this.hasUniformScale(), \"can't inverse transform with non-uniform scale\");\r\n        let invRot = this.rotation.inverse();\r\n        return new transform(\r\n            invRot.rotate(vec3.div(this.translation.inverse(), this.scale)),\r\n            invRot,\r\n            new vec3(1.0 / this.scale.x, 1.0 / this.scale.y, 1.0 / this.scale.z)\r\n        ); \r\n    }\r\n    toString(): string{\r\n        return `{ t:${this.translation.toString()}, r:${this.rotation.toString()}, s:${this.scale.toString()} }`;\r\n    }\r\n}","\r\nexport const Epsilon = 1e-4;\r\nexport const SmallEpsilon = 1e-6;\r\nexport const SmallestEpsilon = 1e-8;\r\n\r\nexport function assert(condition: boolean, message: string): void {\r\n    if (!condition)\r\n        throw new Error(message);\r\n}\r\n\r\nexport function radians(value:number):number{\r\n    return value / 180 * Math.PI;\r\n}\r\n\r\nexport function degrees(value:number):number{\r\n    return value / Math.PI * 180;\r\n}\r\n\r\nexport function clamp(value:number, min:number, max:number):number{\r\n    return Math.max(Math.min(value, max), min);\r\n}\r\n\r\nexport function near(a:number, b:number, threshold?:number):boolean{\r\n    if(!threshold)\r\n        threshold = Epsilon;\r\n    return Math.abs(a - b) <= threshold;\r\n}\r\n\r\nexport function lerp(a:number, b:number, t:number):number{\r\n    return b * t + a * (1 - t);\r\n}\r\n\r\nexport function determinant2x2(m11: number, m12: number, m21: number, m22: number): number{\r\n    return m11 * m22 - m12 * m21;\r\n}\r\nexport function determinant3x3(m11: number, m12: number, m13: number,\r\n    m21: number, m22: number, m23: number,\r\n    m31: number, m32: number, m33: number) {\r\n    return m11 * (m22 * m33 - m23 * m32)\r\n    - m12 * (m21 * m33 - m31 * m23)\r\n    + m13 * (m21 * m32 - m31 * m22);\r\n}\r\nexport function determinant4x4(m11: number, m12: number, m13: number, m14: number,\r\n    m21: number, m22: number, m23: number, m24: number,\r\n    m31: number, m32: number, m33: number, m34: number,\r\n    m41: number, m42: number, m43: number, m44: number): number{\r\n    return m11 * determinant3x3(m22, m23, m24, m32, m33, m34, m42, m43, m44)\r\n        - m12 * determinant3x3(m21, m23, m24, m31, m33, m34, m41, m43, m44)\r\n        + m13 * determinant3x3(m21, m22, m24, m31, m32, m34, m41, m42, m44)\r\n        - m14 * determinant3x3(m21, m22, m23, m31, m32, m33, m41, m42, m43);\r\n}","import { Epsilon } from \"./utils\";\r\n\r\nexport default class vec2 {\r\n    x: number;\r\n    y: number;\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    static near(a:vec2, b:vec2, threshold?:number):boolean{\r\n        if(!threshold){\r\n            threshold = Epsilon;\r\n        }\r\n        return vec2.sub(a, b).lInfnorm() <= threshold;\r\n    }\r\n    length(): number {\r\n        return Math.sqrt(this.squaredLength());\r\n    }\r\n    squaredLength(): number {\r\n        return this.x * this.x + this.y * this.y;\r\n    }\r\n    l1norm(): number {\r\n        return Math.max(Math.abs(this.x), Math.abs(this.y));\r\n    }\r\n    lInfnorm(): number {\r\n        return Math.abs(this.x) + Math.abs(this.y);\r\n    }\r\n    lpnorm(p:number): number {\r\n        return Math.pow(Math.pow(Math.abs(this.x), p) + Math.pow(Math.abs(this.y), p), 1.0 / p);\r\n    }\r\n    mul(v: vec2, out?: vec2): vec2 {\r\n        if (!out)\r\n            out = this.clone();\r\n        out.x = this.x * v.x;\r\n        out.y = this.y * v.y;\r\n        return out;\r\n    }\r\n    div(v: vec2, out?: vec2): vec2 {\r\n        if (!out)\r\n            out = this.clone();\r\n        out.x = this.x / v.x;\r\n        out.y = this.y / v.y;\r\n        return out;\r\n    }\r\n    add(v: vec2, out?: vec2): vec2 {\r\n        if (!out)\r\n            out = this.clone();\r\n        out.x = this.x + v.x;\r\n        out.y = this.y + v.y;\r\n        return out;\r\n    }\r\n    sub(v: vec2, out?: vec2): vec2 {\r\n        if (!out)\r\n            out = this.clone();\r\n        out.x = this.x - v.x;\r\n        out.y = this.y - v.y;\r\n        return out;\r\n    }\r\n    scale(s: number, out?: vec2): vec2 {\r\n        if (!out)\r\n            out = this.clone();\r\n        out.x = this.x * s;\r\n        out.y = this.y * s;\r\n        return out;\r\n    }\r\n    mulSelf(v: vec2): vec2 {\r\n        return this.mul(v, this);\r\n    }\r\n    divSelf(v: vec2): vec2 {\r\n        return this.mul(v, this);\r\n    }\r\n    addSelf(v: vec2): vec2 {\r\n        return this.add(v, this);\r\n    }\r\n    subSelf(v: vec2): vec2 {\r\n        return this.sub(v, this);\r\n    }\r\n    scaleSelf(s: number): vec2 {\r\n        return this.scale(s, this);\r\n    }\r\n    static mul(a: vec2, b: vec2): vec2 {\r\n        return a.mul(b);\r\n    }\r\n    static div(a: vec2, b: vec2): vec2 {\r\n        return a.div(b);\r\n    }\r\n    static add(a: vec2, b: vec2): vec2 {\r\n        return a.add(b);\r\n    }\r\n    static sub(a: vec2, b: vec2): vec2 {\r\n        return a.sub(b);\r\n    }\r\n    static scale(s: number): vec2 {\r\n        return this.scale(s);\r\n    }\r\n    static dot(a: vec2, b: vec2): number {\r\n        return a.x * b.x + a.y * b.y;\r\n    }\r\n    static cross(a: vec2, b: vec2): number {\r\n        return a.x * b.y - a.y * b.x;\r\n    }\r\n    clone(): vec2 {\r\n        return new vec2(this.x, this.y);\r\n    }\r\n}","import axisAngle from \"./axisAngle\";\r\nimport { lerp, Epsilon } from \"./utils\";\r\n\r\nexport default class vec3{\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n    constructor(x: number, y: number, z: number){\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n    inverse():vec3 {\r\n        return new vec3(this.x, this.y, this.z);\r\n    }\r\n    static lerp(a:vec3, b:vec3, t: number):vec3{\r\n        return new vec3(\r\n            lerp(a.x, b.x, t),\r\n            lerp(a.y, b.y, t),\r\n            lerp(a.z, b.z, t)\r\n        );\r\n    }\r\n    static near(a:vec3, b:vec3, threshold?:number):boolean{\r\n        if(!threshold){\r\n            threshold = Epsilon;\r\n        }\r\n        return vec3.sub(a, b).lInfnorm() <= threshold;\r\n    }\r\n    static empty():vec3{\r\n        return new vec3(0., 0., 0.);\r\n    }\r\n    clone():vec3{\r\n        return new vec3(this.x, this.y, this.z);\r\n    }\r\n    //scale\r\n    static scale(a:vec3, scalar:number):vec3{\r\n        return a.scale(scalar);\r\n    }\r\n    scale(scalar:number, out?:vec3):vec3{\r\n        if (!out) {\r\n            out = this.clone();\r\n        }\r\n        out.x = this.x * scalar;\r\n        out.y = this.y * scalar;\r\n        out.z = this.z * scalar;\r\n        return out;\r\n    }\r\n    scaleSelf(scalar:number):vec3{\r\n        this.scale(scalar, this);\r\n        return this;\r\n    }\r\n    //add\r\n    static add(a:vec3, b:vec3):vec3{\r\n        return a.add(b);\r\n    }\r\n    add(vec:vec3, out?:vec3):vec3{\r\n        if (!out) {\r\n            out = this.clone();\r\n        }\r\n        out.x = this.x + vec.x;\r\n        out.y = this.y + vec.y;\r\n        out.z = this.z + vec.z;\r\n        return out;\r\n    }\r\n    addSelf(v:vec3):vec3{\r\n        return this.add(v, this);\r\n    }\r\n    //sub\r\n    static sub(a:vec3, b:vec3):vec3{\r\n        return a.sub(b);\r\n    }\r\n    sub(v:vec3, out?:vec3):vec3{\r\n        if (!out) {\r\n            out = this.clone();\r\n        }\r\n        out.x = this.x - v.x;\r\n        out.y = this.y - v.y;\r\n        out.z = this.z - v.z;\r\n        return out;\r\n    }\r\n    subSelf(v:vec3):vec3{\r\n        return this.sub(v, this);\r\n    }\r\n    //mul\r\n    mul(v:vec3, out?:vec3):vec3{\r\n        if (!out) {\r\n            out = this.clone();\r\n        }\r\n        out.x = this.x * v.x;\r\n        out.y = this.y * v.y;\r\n        out.z = this.z * v.z;\r\n        return out;\r\n    }\r\n    static mul(a:vec3, b:vec3):vec3{\r\n        return a.mul(b);\r\n    }\r\n    mulSelf(v:vec3):vec3{\r\n        return this.mul(v, this);\r\n    }\r\n    //div\r\n    div(v:vec3, out?:vec3):vec3{\r\n        if (!out) {\r\n            out = this.clone();\r\n        }\r\n        out.x = this.x / v.x;\r\n        out.y = this.y / v.y;\r\n        out.z = this.z / v.z;\r\n        return out;\r\n    }\r\n    static div(a:vec3, b:vec3):vec3{\r\n        return a.div(b);\r\n    }\r\n    divSelf(v:vec3):vec3{\r\n        return this.div(v, this);\r\n    }\r\n    //dot\r\n    static dot(a:vec3, b:vec3):number{\r\n        return a.x * b.x + a.y * b.y + a.z * b.z;\r\n    }\r\n    dot(v:vec3):number{\r\n        return vec3.dot(this, v); \r\n    }\r\n    //cross\r\n    static cross(a:vec3, b:vec3):vec3{\r\n        return new vec3(\r\n            a.y * b.z - a.z * b.y,\r\n            -a.x * b.z + a.z * b.x, \r\n            a.x * b.y - a.y * b.x \r\n            );\r\n    }\r\n    cross(v:vec3):vec3{\r\n        return vec3.cross(this, v);\r\n    }\r\n    //normalization\r\n    normalize():vec3{\r\n        let l = this.l2norm();\r\n        return this.scaleSelf(1./l);\r\n    }\r\n    normalized():vec3{\r\n        return this.clone().normalize();\r\n    }\r\n    lpnorm(p:number):number{\r\n        return Math.pow(\r\n            Math.pow(Math.abs(this.x), p) + \r\n            Math.pow(Math.abs(this.y), p) + \r\n            Math.pow(Math.abs(this.z), p)\r\n            , 1.0/p);\r\n    }\r\n    l1norm():number{\r\n        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\r\n    }\r\n    l2norm():number{\r\n        return Math.sqrt(this.squaredLength());\r\n    }\r\n    lInfnorm():number{\r\n        return Math.max(Math.abs(this.x), Math.max(Math.abs(this.y), Math.abs(this.z)));\r\n    }\r\n    length():number{\r\n        return this.l2norm();\r\n    }\r\n    squaredLength():number{\r\n        return this.x * this.x + this.y * this.y + this.z * this.z;\r\n    }    \r\n    toString():string{\r\n        return `[${this.x.toFixed(4)}, ${this.y.toFixed(4)}, ${this.z.toFixed(4)}]`;\r\n    }\r\n    rotateEuler(point:vec3):vec3{\r\n        let ax = new axisAngle(new vec3(1, 0, 0), this.x);\r\n        let ay = new axisAngle(new vec3(0, 1, 0), this.y);\r\n        let az = new axisAngle(new vec3(0, 0, 1), this.z);\r\n        return az.rotate(ay.rotate(ax.rotate(point)));\r\n    }\r\n}","export default class vec4 {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n    w: number;\r\n    constructor(x: number, y: number, z: number, w: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n    }\r\n}","import { assert, clamp } from \"./utils\";\r\n\r\nexport default class vector {\r\n    data:number[];\r\n    constructor(data:number[]) {\r\n        this.data = data;\r\n    }\r\n    copy(): vector {\r\n        return new vector(this.data.slice());\r\n    }\r\n    clone(): vector {\r\n        return new vector(this.data.slice());\r\n    }\r\n    static empty(length: number): vector {\r\n        let data:number[];\r\n        (data = []).length = length;\r\n        data.fill(0);\r\n        return new vector(data);\r\n    }\r\n    static dot(a:vector, b:vector) {\r\n        let result = 0;\r\n        for (let i = 0; i < a.size(); i++) {\r\n            result += a.data[i] * b.data[i];\r\n        }\r\n        return result;\r\n    }\r\n    static add(a:vector, b:vector) {\r\n        let result = [];\r\n        for (let i = 0; i < a.data.length; i++)\r\n            result.push(a.data[i] + b.data[i]);\r\n        return new vector(result);\r\n    }\r\n    static sub(a:vector, b:vector) {\r\n        let result = [];\r\n        for (let i = 0; i < a.data.length; i++)\r\n            result.push(a.data[i] - b.data[i]);\r\n        return new vector(result);\r\n    }\r\n    static mul(a:vector, b:vector) {\r\n        let result = [];\r\n        for (let i = 0; i < a.data.length; i++)\r\n            result.push(a.data[i] * b.data[i]);\r\n        return new vector(result);\r\n    }\r\n    static scale(a:vector, s:number) {\r\n        let result = [];\r\n        for (let i = 0; i < a.data.length; i++)\r\n            result.push(a.data[i] * s);\r\n        return new vector(result);\r\n    }\r\n    addSelf(b:vector) {\r\n        for (let i = 0; i < this.data.length; i++)\r\n            this.data[i] += b.data[i];\r\n        return this;\r\n    }\r\n    subSelf(b:vector) {\r\n        for (let i = 0; i < this.data.length; i++)\r\n            this.data[i] -= b.data[i];\r\n        return this;\r\n    }\r\n    scaleSelf(s:number) {\r\n        for (let i = 0; i < this.data.length; i++)\r\n            this.data[i] *= s;\r\n        return this;\r\n    }\r\n    get(i:number):number {\r\n        return this.data[i];\r\n    }\r\n    set(i:number, value:number):void {\r\n        this.data[i] = value;\r\n    }\r\n    size(): number {\r\n        return this.data.length;\r\n    }\r\n    getSubVector(offset:number, length:number) {\r\n        let resultData = new Array(length);\r\n        for (let i = 0; i < length; i++)\r\n            resultData[i] = this.data[offset + i];\r\n        return new vector(resultData);\r\n    }\r\n    addSubVector(b:vector, offset:number):vector {\r\n        assert(this.size() == b.size() + offset, \"Vectors should have matching sizes\");\r\n        for (let i = 0; i < b.size(); i++)\r\n            this.data[i + offset] += b.get(i);\r\n        return this;\r\n    }\r\n    subSubVector(b:vector, offset:number):vector {\r\n        assert(this.size() == b.size() + offset, \"Vectors should have matching sizes\");\r\n        for (let i = 0; i < b.size(); i++)\r\n            this.data[i + offset] -= b.get(i);\r\n        return this;\r\n    }\r\n    add(b: vector, dest?: vector): vector {\r\n        if (!dest)\r\n            dest = this;\r\n            assert(this.size() == b.size(), \"Vectors should be of equal size\");\r\n        for (let i = 0; i < this.data.length; i++)\r\n            dest.data[i] = this.data[i] + b.data[i];\r\n        return dest;\r\n    }\r\n    sub(b: vector, dest?: vector): vector {\r\n        if (!dest)\r\n            dest = this;\r\n            assert(this.size() == b.size(), \"Vectors should be of equal size\");\r\n        for (let i = 0; i < this.data.length; i++)\r\n            dest.data[i] = this.data[i] - b.data[i];\r\n        return dest;\r\n    }\r\n    mul(b: vector, dest?: vector): vector {\r\n        if (!dest)\r\n            dest = this;\r\n        assert(this.size() == b.size(), \"Vectors should be of equal size\");\r\n        for (let i = 0; i < this.data.length; i++)\r\n            dest.data[i] = this.data[i] * b.data[i];\r\n        return dest;\r\n    }\r\n    scale(b: number, dest?: vector): vector {\r\n        if (!dest)\r\n            dest = this;\r\n        for (let i = 0; i < this.data.length; i++)\r\n            dest.data[i] = this.data[i] * b;\r\n        return dest;\r\n    }\r\n    l1Norm(): number {\r\n        let result = 0;\r\n        for (let i = 0; i < this.data.length; i++)\r\n            result += Math.abs(this.data[i]);\r\n        return result;\r\n    }\r\n    l2Norm(): number {\r\n        let result = 0;\r\n        for (let i = 0; i < this.data.length; i++)\r\n            result += this.data[i] * this.data[i];\r\n        return Math.sqrt(result);\r\n    }\r\n    lInfNorm(): number {\r\n        let result = 0;\r\n        for (let i = 0; i < this.data.length; i++)\r\n            result = Math.max(Math.abs(this.data[i]));\r\n        return result;\r\n    }\r\n    norm2(): number {\r\n        let result = 0;\r\n        for (let i = 0; i < this.data.length; i++)\r\n            result += this.data[i] * this.data[i];\r\n        return Math.sqrt(result);\r\n    }\r\n    clamp(min: vector, max: vector): void {\r\n        for (let i = 0; i < this.data.length; i++) {\r\n            this.data[i] = clamp(this.data[i], min.data[i], max.data[i]);\r\n        }\r\n    }\r\n    clampScalar(min: number, max: number): void {\r\n        for (let i = 0; i < this.data.length; i++) {\r\n            this.data[i] = clamp(this.data[i], min, max);\r\n        }\r\n    }\r\n    print(fractionDigits: number): string {\r\n        if (!fractionDigits)\r\n            fractionDigits = 4;\r\n        let result = \"[ \";\r\n        this.data.forEach((item) => result += item.toFixed(fractionDigits) + \" \");\r\n        return result + \"]\";\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(607);\n"],"names":["constructor","axis","angle","this","normalized","a","b","threshold","Epsilon","near","rotate","point","add","lerp","scale","dot","Math","cos","cross","scaleSelf","sin","toString","toFixed","complex","x","y","super","r","theta","conjugate","arg","atan2","inverse","out","sl","squaredLength","empty","bSquaredLength","z","polar","exp","log","length","lnR","axisAngle","mat2","mat3","mat4","matrix","quat","transform","vec2","vec3","vec4","vector","utils","m11","m12","m21","m22","data","clone","set","i","j","value","get","abs","determinant","determinant2x2","preMulVec","v","postMulVec","ca","sa","toMat3","m13","m23","m31","m32","m33","aa","c","s","trace","toAxisAngle","SmallEpsilon","acos","l2norm","toEulerAngles","Error","yaw","cy","sy","pitch","cp","sp","roll","cr","sr","toQuat","toMat4","l","mul","m","result","mulSelf","d","dx","determinant3x3","dy","dz","transpose","assert","f","t","extractMat2","m14","m24","m34","m41","m42","m43","m44","extractMat3","determinant4x4","extractTranslation","transformPoint","p","transformVector","w","rMat","h","fill","copy","slice","width","height","size","k","row","column","push","A","rang","indexes","Array","max","temp","solve","print","fractionDigits","fromAxisAngle","o","q","addSelf","sub","subSelf","conj","div","divSelf","normalize","x2","y2","z2","PI","sign","sqrt","translation","rotation","hasUniformScale","identity","toAffine","fromTRS","transformInversePoint","transformInverseVector","invRot","SmallestEpsilon","condition","message","min","lInfnorm","l1norm","lpnorm","pow","scalar","vec","rotateEuler","ax","ay","getSubVector","offset","resultData","addSubVector","subSubVector","dest","l1Norm","l2Norm","lInfNorm","norm2","clamp","clampScalar","forEach","item","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call"],"sourceRoot":""}